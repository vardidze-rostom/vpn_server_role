---

- name: Обновление всех пакетов
  tags: vpn-server
  ansible.builtin.apt:
    update_cache: true
    upgrade: "yes"

- name: Удаление старых версий Docker и связанных пакетов
  ansible.builtin.apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - docker-compose-v2
      - podman-docker
      - containerd
      - runc
    state: absent
    autoremove: yes

- name: Добавление Docker GPG ключа
  ansible.builtin.shell: |
    # Add Docker's official GPG key:
    apt-get update
    apt-get install ca-certificates curl
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc

    # Add the repository to Apt sources:
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Обновление Apt кеша
  ansible.builtin.apt:
    update_cache: yes

- name: Установка Docker и связанных пакетов
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present


- name: Установка ПО
  tags: vpn-server
  ansible.builtin.apt:
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: present

- name: Создание конфигурационного файла для виртуального хоста Nginx
  tags: vpn-server
  ansible.builtin.copy:
    dest: /etc/nginx/sites-available/{{ domain_name }}
    mode: "0644"
    content: |
      server {
          server_name {{ domain_name }};
          server_tokens off;

          location / {
              proxy_pass http://127.0.0.1:{{ vpn_port  }};
          }
      }

- name: Создание символьной ссылки на конфигурацию виртуального хоста
  tags: vpn-server
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ domain_name }}
    dest: /etc/nginx/sites-enabled/{{ domain_name }}
    state: link

- name: Удаление файла конфигурации по умолчанию
  tags: vpn-server
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Проверка конфигурации Nginx
  tags: vpn-server
  ansible.builtin.command: nginx -t
  register: my_output # <- Registers the command output.
  changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

- name: Получение SSL-сертификата от Let's Encrypt
  tags: vpn-server
  ansible.builtin.command: certbot --nginx --non-interactive --agree-tos --email {{ email }} -d {{ domain_name }}
  register: my_output # <- Registers the command output.
  changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.
  notify: Restart nginx

- name: Создание пользователей и добавление SSH ключей
  tags: vpn-server
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: present
    shell: /bin/bash
    groups: docker,sudo
  with_items: "{{ users }}"

- name: Настройка SSH ключей для пользователей
  tags: vpn-server
  ansible.builtin.authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.ssh_key }}"
  with_items: "{{ users }}"

- name: Настройка sudo для пользователей без необходимости ввода пароля
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    line: "{{ item.name }} ALL=(ALL) NOPASSWD:ALL"
    validate: '/usr/sbin/visudo -cf %s'
  with_items: "{{ users }}"

- name: Отключение входа по паролю в дополнительных конфигурационных файлах SSH
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    regexp: '^PasswordAuthentication\s+yes'
    line: 'PasswordAuthentication no'
    state: present
    validate: '/usr/sbin/sshd -t'
  with_fileglob:
    - /etc/ssh/sshd_config.d/*.conf
    - /etc/ssh/*.conf

- name: Reboot the server
  tags: vpn-server
  ansible.builtin.reboot:
    pre_reboot_delay: 0
    post_reboot_delay: 60 # задержка перед повторным подключение к серверу
